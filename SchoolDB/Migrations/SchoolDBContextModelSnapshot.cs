// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolDB.Data;

#nullable disable

namespace SchoolDB.Migrations
{
    [DbContext(typeof(SchoolDBContext))]
    partial class SchoolDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SchoolDB.Models.Assignment", b =>
                {
                    b.Property<int>("AssignmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Assignment_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssignmentId"));

                    b.Property<int?>("FkCourseId")
                        .HasColumnType("int")
                        .HasColumnName("Fk_course_id");

                    b.Property<int?>("FkEmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("Fk_employee_id");

                    b.HasKey("AssignmentId")
                        .HasName("PK__Assignme__9E0E9F2FFB1D9FF6");

                    b.HasIndex("FkCourseId");

                    b.HasIndex("FkEmployeeId");

                    b.ToTable("Assignments");
                });

            modelBuilder.Entity("SchoolDB.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Course_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<string>("CourseName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("CourseId")
                        .HasName("PK__Courses__37E005DBA76AC388");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("SchoolDB.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Employee_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("Contact")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<DateTime?>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EmployeeId")
                        .HasName("PK__Employee__781134A16B6D0D89");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("SchoolDB.Models.Enrollment", b =>
                {
                    b.Property<int>("EnrollmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Enrollment_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnrollmentId"));

                    b.Property<DateOnly?>("EnrollmentDate")
                        .HasColumnType("date");

                    b.Property<int?>("FkCourseId")
                        .HasColumnType("int")
                        .HasColumnName("Fk_CourseID");

                    b.Property<int?>("FkStudentId")
                        .HasColumnType("int")
                        .HasColumnName("Fk_StudentID");

                    b.HasKey("EnrollmentId")
                        .HasName("PK__Enrollme__4365BD4A8F29B8DC");

                    b.HasIndex("FkCourseId");

                    b.HasIndex("FkStudentId");

                    b.ToTable("Enrollments");
                });

            modelBuilder.Entity("SchoolDB.Models.Grade", b =>
                {
                    b.Property<int>("GradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Grade_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GradeId"));

                    b.Property<int?>("FkCourseId")
                        .HasColumnType("int")
                        .HasColumnName("FK_CourseID");

                    b.Property<int?>("FkEmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("FK_EmployeeID");

                    b.Property<int?>("FkStudentId")
                        .HasColumnType("int")
                        .HasColumnName("FK_StudentID");

                    b.Property<decimal?>("Grade1")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Grade");

                    b.Property<DateTime?>("GradeDate")
                        .HasColumnType("datetime2");

                    b.HasKey("GradeId")
                        .HasName("PK__Grades__D4437133DF502732");

                    b.HasIndex("FkCourseId");

                    b.HasIndex("FkEmployeeId");

                    b.HasIndex("FkStudentId");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("SchoolDB.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Student_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Contact")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("LastName")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.HasKey("StudentId")
                        .HasName("PK__Students__A2F4E98C5A1D3821");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("SchoolDB.Models.Assignment", b =>
                {
                    b.HasOne("SchoolDB.Models.Course", "FkCourse")
                        .WithMany("Assignments")
                        .HasForeignKey("FkCourseId")
                        .HasConstraintName("FK__Assignmen__Fk_co__47DBAE45");

                    b.HasOne("SchoolDB.Models.Employee", "FkEmployee")
                        .WithMany("Assignments")
                        .HasForeignKey("FkEmployeeId")
                        .HasConstraintName("FK__Assignmen__Fk_em__46E78A0C");

                    b.Navigation("FkCourse");

                    b.Navigation("FkEmployee");
                });

            modelBuilder.Entity("SchoolDB.Models.Enrollment", b =>
                {
                    b.HasOne("SchoolDB.Models.Course", "FkCourse")
                        .WithMany("Enrollments")
                        .HasForeignKey("FkCourseId")
                        .HasConstraintName("FK__Enrollmen__Fk_Co__440B1D61");

                    b.HasOne("SchoolDB.Models.Student", "FkStudent")
                        .WithMany("Enrollments")
                        .HasForeignKey("FkStudentId")
                        .HasConstraintName("FK__Enrollmen__Enrol__4316F928");

                    b.Navigation("FkCourse");

                    b.Navigation("FkStudent");
                });

            modelBuilder.Entity("SchoolDB.Models.Grade", b =>
                {
                    b.HasOne("SchoolDB.Models.Course", "FkCourse")
                        .WithMany("Grades")
                        .HasForeignKey("FkCourseId")
                        .HasConstraintName("FK__Grades__FK_Cours__3F466844");

                    b.HasOne("SchoolDB.Models.Employee", "FkEmployee")
                        .WithMany("Grades")
                        .HasForeignKey("FkEmployeeId")
                        .HasConstraintName("FK__Grades__FK_Emplo__403A8C7D");

                    b.HasOne("SchoolDB.Models.Student", "FkStudent")
                        .WithMany("Grades")
                        .HasForeignKey("FkStudentId")
                        .HasConstraintName("FK__Grades__GradeDat__3E52440B");

                    b.Navigation("FkCourse");

                    b.Navigation("FkEmployee");

                    b.Navigation("FkStudent");
                });

            modelBuilder.Entity("SchoolDB.Models.Course", b =>
                {
                    b.Navigation("Assignments");

                    b.Navigation("Enrollments");

                    b.Navigation("Grades");
                });

            modelBuilder.Entity("SchoolDB.Models.Employee", b =>
                {
                    b.Navigation("Assignments");

                    b.Navigation("Grades");
                });

            modelBuilder.Entity("SchoolDB.Models.Student", b =>
                {
                    b.Navigation("Enrollments");

                    b.Navigation("Grades");
                });
#pragma warning restore 612, 618
        }
    }
}
